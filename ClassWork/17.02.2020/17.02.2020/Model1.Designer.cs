//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("LIBRARYModel", "FK__Books__Author_Id__21B6055D", "Authors", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_17._02._2020.Author), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_17._02._2020.Book), true)]
[assembly: EdmRelationshipAttribute("LIBRARYModel", "FK__Books__Language___22AA2996", "Languages", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_17._02._2020.Language), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_17._02._2020.Book), true)]
[assembly: EdmRelationshipAttribute("LIBRARYModel", "FK__Languages__Count__0F975522", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_17._02._2020.Country), "Languages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_17._02._2020.Language), true)]

#endregion

namespace _17._02._2020
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class LIBRARYEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект LIBRARYEntities, используя строку соединения из раздела "LIBRARYEntities" файла конфигурации приложения.
        /// </summary>
        public LIBRARYEntities() : base("name=LIBRARYEntities", "LIBRARYEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LIBRARYEntities.
        /// </summary>
        public LIBRARYEntities(string connectionString) : base(connectionString, "LIBRARYEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта LIBRARYEntities.
        /// </summary>
        public LIBRARYEntities(EntityConnection connection) : base(connection, "LIBRARYEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Author> Authors
        {
            get
            {
                if ((_Authors == null))
                {
                    _Authors = base.CreateObjectSet<Author>("Authors");
                }
                return _Authors;
            }
        }
        private ObjectSet<Author> _Authors;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Book> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Book>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Book> _Books;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Authors. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToAuthors(Author author)
        {
            base.AddObject("Authors", author);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Books. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBooks(Book book)
        {
            base.AddObject("Books", book);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Countries. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Languages. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LIBRARYModel", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Author.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="author_Name">Исходное значение свойства Author_Name.</param>
        /// <param name="author_Surname">Исходное значение свойства Author_Surname.</param>
        /// <param name="age">Исходное значение свойства Age.</param>
        public static Author CreateAuthor(global::System.Int32 id, global::System.String author_Name, global::System.String author_Surname, global::System.DateTime age)
        {
            Author author = new Author();
            author.Id = id;
            author.Author_Name = author_Name;
            author.Author_Surname = author_Surname;
            author.Age = age;
            return author;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author_Name
        {
            get
            {
                return _Author_Name;
            }
            set
            {
                OnAuthor_NameChanging(value);
                ReportPropertyChanging("Author_Name");
                _Author_Name = StructuralObject.SetValidValue(value, false, "Author_Name");
                ReportPropertyChanged("Author_Name");
                OnAuthor_NameChanged();
            }
        }
        private global::System.String _Author_Name;
        partial void OnAuthor_NameChanging(global::System.String value);
        partial void OnAuthor_NameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author_Surname
        {
            get
            {
                return _Author_Surname;
            }
            set
            {
                OnAuthor_SurnameChanging(value);
                ReportPropertyChanging("Author_Surname");
                _Author_Surname = StructuralObject.SetValidValue(value, false, "Author_Surname");
                ReportPropertyChanged("Author_Surname");
                OnAuthor_SurnameChanged();
            }
        }
        private global::System.String _Author_Surname;
        partial void OnAuthor_SurnameChanging(global::System.String value);
        partial void OnAuthor_SurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.DateTime _Age;
        partial void OnAgeChanging(global::System.DateTime value);
        partial void OnAgeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LIBRARYModel", "FK__Books__Author_Id__21B6055D", "Books")]
        public EntityCollection<Book> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("LIBRARYModel.FK__Books__Author_Id__21B6055D", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("LIBRARYModel.FK__Books__Author_Id__21B6055D", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LIBRARYModel", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Book.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="book_Name">Исходное значение свойства Book_Name.</param>
        /// <param name="author_Id">Исходное значение свойства Author_Id.</param>
        /// <param name="language_id">Исходное значение свойства Language_id.</param>
        /// <param name="pages_count">Исходное значение свойства Pages_count.</param>
        public static Book CreateBook(global::System.Int32 id, global::System.String book_Name, global::System.Int32 author_Id, global::System.Int32 language_id, global::System.Int32 pages_count)
        {
            Book book = new Book();
            book.Id = id;
            book.Book_Name = book_Name;
            book.Author_Id = author_Id;
            book.Language_id = language_id;
            book.Pages_count = pages_count;
            return book;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Book_Name
        {
            get
            {
                return _Book_Name;
            }
            set
            {
                OnBook_NameChanging(value);
                ReportPropertyChanging("Book_Name");
                _Book_Name = StructuralObject.SetValidValue(value, false, "Book_Name");
                ReportPropertyChanged("Book_Name");
                OnBook_NameChanged();
            }
        }
        private global::System.String _Book_Name;
        partial void OnBook_NameChanging(global::System.String value);
        partial void OnBook_NameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Author_Id
        {
            get
            {
                return _Author_Id;
            }
            set
            {
                OnAuthor_IdChanging(value);
                ReportPropertyChanging("Author_Id");
                _Author_Id = StructuralObject.SetValidValue(value, "Author_Id");
                ReportPropertyChanged("Author_Id");
                OnAuthor_IdChanged();
            }
        }
        private global::System.Int32 _Author_Id;
        partial void OnAuthor_IdChanging(global::System.Int32 value);
        partial void OnAuthor_IdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Language_id
        {
            get
            {
                return _Language_id;
            }
            set
            {
                OnLanguage_idChanging(value);
                ReportPropertyChanging("Language_id");
                _Language_id = StructuralObject.SetValidValue(value, "Language_id");
                ReportPropertyChanged("Language_id");
                OnLanguage_idChanged();
            }
        }
        private global::System.Int32 _Language_id;
        partial void OnLanguage_idChanging(global::System.Int32 value);
        partial void OnLanguage_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pages_count
        {
            get
            {
                return _Pages_count;
            }
            set
            {
                OnPages_countChanging(value);
                ReportPropertyChanging("Pages_count");
                _Pages_count = StructuralObject.SetValidValue(value, "Pages_count");
                ReportPropertyChanged("Pages_count");
                OnPages_countChanged();
            }
        }
        private global::System.Int32 _Pages_count;
        partial void OnPages_countChanging(global::System.Int32 value);
        partial void OnPages_countChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LIBRARYModel", "FK__Books__Author_Id__21B6055D", "Authors")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("LIBRARYModel.FK__Books__Author_Id__21B6055D", "Authors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("LIBRARYModel.FK__Books__Author_Id__21B6055D", "Authors").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("LIBRARYModel.FK__Books__Author_Id__21B6055D", "Authors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("LIBRARYModel.FK__Books__Author_Id__21B6055D", "Authors", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LIBRARYModel", "FK__Books__Language___22AA2996", "Languages")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LIBRARYModel.FK__Books__Language___22AA2996", "Languages").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LIBRARYModel.FK__Books__Language___22AA2996", "Languages").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("LIBRARYModel.FK__Books__Language___22AA2996", "Languages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("LIBRARYModel.FK__Books__Language___22AA2996", "Languages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LIBRARYModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Country.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="country1">Исходное значение свойства Country1.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String country1)
        {
            Country country = new Country();
            country.Id = id;
            country.Country1 = country1;
            return country;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country1
        {
            get
            {
                return _Country1;
            }
            set
            {
                OnCountry1Changing(value);
                ReportPropertyChanging("Country1");
                _Country1 = StructuralObject.SetValidValue(value, false, "Country1");
                ReportPropertyChanged("Country1");
                OnCountry1Changed();
            }
        }
        private global::System.String _Country1;
        partial void OnCountry1Changing(global::System.String value);
        partial void OnCountry1Changed();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LIBRARYModel", "FK__Languages__Count__0F975522", "Languages")]
        public EntityCollection<Language> Languages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Language>("LIBRARYModel.FK__Languages__Count__0F975522", "Languages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Language>("LIBRARYModel.FK__Languages__Count__0F975522", "Languages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LIBRARYModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Language.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="language_Name">Исходное значение свойства Language_Name.</param>
        /// <param name="country_id">Исходное значение свойства Country_id.</param>
        public static Language CreateLanguage(global::System.Int32 id, global::System.String language_Name, global::System.Int32 country_id)
        {
            Language language = new Language();
            language.Id = id;
            language.Language_Name = language_Name;
            language.Country_id = country_id;
            return language;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Language_Name
        {
            get
            {
                return _Language_Name;
            }
            set
            {
                OnLanguage_NameChanging(value);
                ReportPropertyChanging("Language_Name");
                _Language_Name = StructuralObject.SetValidValue(value, false, "Language_Name");
                ReportPropertyChanged("Language_Name");
                OnLanguage_NameChanged();
            }
        }
        private global::System.String _Language_Name;
        partial void OnLanguage_NameChanging(global::System.String value);
        partial void OnLanguage_NameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Country_id
        {
            get
            {
                return _Country_id;
            }
            set
            {
                OnCountry_idChanging(value);
                ReportPropertyChanging("Country_id");
                _Country_id = StructuralObject.SetValidValue(value, "Country_id");
                ReportPropertyChanged("Country_id");
                OnCountry_idChanged();
            }
        }
        private global::System.Int32 _Country_id;
        partial void OnCountry_idChanging(global::System.Int32 value);
        partial void OnCountry_idChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LIBRARYModel", "FK__Books__Language___22AA2996", "Books")]
        public EntityCollection<Book> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("LIBRARYModel.FK__Books__Language___22AA2996", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("LIBRARYModel.FK__Books__Language___22AA2996", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LIBRARYModel", "FK__Languages__Count__0F975522", "Countries")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LIBRARYModel.FK__Languages__Count__0F975522", "Countries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LIBRARYModel.FK__Languages__Count__0F975522", "Countries").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("LIBRARYModel.FK__Languages__Count__0F975522", "Countries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("LIBRARYModel.FK__Languages__Count__0F975522", "Countries", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
